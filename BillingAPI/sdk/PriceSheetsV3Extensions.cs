// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace BillingAPI
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PriceSheetsV3.
    /// </summary>
    public static partial class PriceSheetsV3Extensions
    {
            /// <summary>
            /// Gets the price sheet for the current billing period.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='enrollmentNumber'>
            /// The enrollment number
            /// </param>
            public static IList<PriceSheetV3> Get(this IPriceSheetsV3 operations, string enrollmentNumber)
            {
                return operations.GetAsync(enrollmentNumber).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the price sheet for the current billing period.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='enrollmentNumber'>
            /// The enrollment number
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<PriceSheetV3>> GetAsync(this IPriceSheetsV3 operations, string enrollmentNumber, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(enrollmentNumber, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the price sheet for the provided billing period.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='enrollmentNumber'>
            /// The enrollment number
            /// </param>
            /// <param name='billingPeriod'>
            /// The billing period id
            /// </param>
            public static IList<PriceSheetV3> Get1(this IPriceSheetsV3 operations, string enrollmentNumber, string billingPeriod)
            {
                return operations.Get1Async(enrollmentNumber, billingPeriod).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the price sheet for the provided billing period.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='enrollmentNumber'>
            /// The enrollment number
            /// </param>
            /// <param name='billingPeriod'>
            /// The billing period id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<PriceSheetV3>> Get1Async(this IPriceSheetsV3 operations, string enrollmentNumber, string billingPeriod, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.Get1WithHttpMessagesAsync(enrollmentNumber, billingPeriod, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
